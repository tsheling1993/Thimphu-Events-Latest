{"version":3,"sources":["webpack:///./src/app/offerupdate/offerupdate.module.ts","webpack:///./src/app/offerupdate/offerupdate.page.html","webpack:///./src/app/offerupdate/offerupdate.page.scss","webpack:///./src/app/offerupdate/offerupdate.page.ts"],"names":[],"mappings":"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","file":"offerupdate-offerupdate-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OfferupdatePage } from './offerupdate.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OfferupdatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OfferupdatePage]\n})\nexport class OfferupdatePageModule {}\n","module.exports = \"<ion-header >\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-buttons>\\n    <ion-button (click)=\\\"openMenu()\\\" style=\\\"color:white;\\\"><ion-icon name=\\\"menu\\\"></ion-icon></ion-button>\\n    <ion-back-button style=\\\"color:white;\\\"></ion-back-button>\\n    <ion-title id=\\\"title\\\" style=\\\"color:white;\\\">Offer Update</ion-title>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n<!-- for uploading offers details -->\\n<ion-grid>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\">\\n      Offer Title:\\n    </ion-col>\\n    <ion-col size=\\\"8\\\">\\n        <ion-input type=\\\"text\\\" class=\\\"m-style\\\" [(ngModel)]=\\\"salesTitle\\\"></ion-input>\\n      </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\">\\n      <ion-label>Date:</ion-label>\\n    </ion-col>\\n    <ion-col size=\\\"8\\\">\\n        <ion-input type=\\\"text\\\" button=true, value={{Date}} (click)=\\\"pickDate()\\\" class=\\\"m-style\\\" [(ngModel)]=\\\"uploadDate\\\"></ion-input>\\n      </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col size=\\\"4\\\">\\n      <ion-label>Details:</ion-label>\\n    </ion-col>\\n    <ion-col size=\\\"8\\\">\\n        <ion-textarea type=\\\"text\\\" class=\\\"m-style\\\" [(ngModel)]=\\\"salesDetail\\\"></ion-textarea>\\n      </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col><ion-label>Image:</ion-label></ion-col>\\n    <ion-col>\\n        <ion-label>\\n            <input type=\\\"file\\\" (change)=\\\"detectSalesFiles($event)\\\">\\n         </ion-label>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button (click)=\\\"insertFs()\\\" color=\\\"secondary\\\"> update offer</ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n</ion-content>\\n\"","module.exports = \".m-style {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: teal; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AlertController, NavController, MenuController } from '@ionic/angular';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { UploadpicService } from '../../services/uploadpic/uploadpic.service';\nimport { Upload } from '../../models/upload/upload';\nimport * as _ from 'lodash';\n@Component({\n  selector: 'app-offerupdate',\n  templateUrl: './offerupdate.page.html',\n  styleUrls: ['./offerupdate.page.scss'],\n})\nexport class OfferupdatePage implements OnInit {\n\n  salesTitle : any;\n  itemTitle : any;\n  itemDetail : any;\n  uploadDate : any;\n  salesDetail : any;\n  date : any;\n  salesData:any[]=[];\n  title:any;\n  desc:any;\n  sales:any[]=[];\n  selectedFiles: FileList;\n  currentUpload: Upload;\n  constructor(private fs : AngularFirestore,\n    private altCtl : AlertController,\n    private navCtl : NavController,\n    private datePicker: DatePicker,\n    private uploadServ: UploadpicService,\n    private menu: MenuController) { \n      this.loadData();\n    }\n  ngOnInit() {\n    //for retriving useditem data\n  }\n  openMenu(){\n    this.menu.toggle('myMenu');\n  }\n  loadData(){\n    this.fs.collection('/sales',ref=>ref.orderBy('createdAt', 'desc')).get().subscribe(res=>\n      {\n        res.forEach((doc:any)=>\n      {\n        this.sales.push({\n          salestitle:doc.data().salestitle,\n          uploaddate :doc.data().uploaddate,\n          detail : doc.data().detail,\n        })\n        this.salesTitle = doc.data().salestitle;\n        this.uploadDate = doc.data().uploaddate;\n        this.salesDetail = doc.data().detail;\n      });\n      })\n      console.log(this.sales);\n  }\n\n  detectSalesFiles(event:any){\n    this.selectedFiles = event.target.files;\n  }\n\n  insertFs(){\n    let basePath:string=\"/sales\";\n    let file = this.selectedFiles.item(0)\n    this.currentUpload = new Upload(file);\n    this.fs.collection(`${basePath}`).doc(`${this.salesTitle}`).set(\n      {\n      salestitle : this.salesTitle,\n      uploaddate : this.uploadDate, \n      detail : this.salesDetail,\n    }\n    ).then(data=>\n      {\n        console.log(\"reach here with data: \"+data);\n          this.alert(\"For Information\",\"Insertion successful\");\n          this.navCtl.navigateForward('/sales');\n        console.log(data);\n        this.uploadServ.pushUpload1(this.currentUpload,basePath,this.salesTitle);\n      }\n      )\n  }\n\n  async alert(header:string,message:string)\n  {\n    const alert=await this.altCtl.create({\n      header:header,\n      message: message,\n      cssClass:'ok',\n      buttons:['OK']\n    });\n    alert.present();\n  }\n  pickDate(){\n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      // androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK\n      androidTheme : this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\n    }).then(\n      date =>{\n        let dateArray=date.toString().split(' ');\n        this.uploadDate=dateArray[0]+\" \"+dateArray[1]+\" \"+dateArray[2]+\" \"+dateArray[3]\n        err => console.log('Error occurred while getting date: ', err)\n      }\n    \n      //console.log('Got date: ', date),\n    );\n  }\n\n\n\n}\n"],"sourceRoot":""}