{"version":3,"sources":["webpack:///./src/app/thromdedriver/thromdedriver.module.ts","webpack:///./src/app/thromdedriver/thromdedriver.page.html","webpack:///./src/app/thromdedriver/thromdedriver.page.scss","webpack:///./src/app/thromdedriver/thromdedriver.page.ts"],"names":[],"mappings":"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","file":"thromdedriver-thromdedriver-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ThromdedriverPage } from './thromdedriver.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ThromdedriverPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ThromdedriverPage]\n})\nexport class ThromdedriverPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n      <ion-buttons>\\n          <ion-button (click)=\\\"openMenu()\\\" style=\\\"color:white;\\\"><ion-icon name=\\\"menu\\\"></ion-icon></ion-button>\\n        <ion-back-button style=\\\"color:rgb(255, 255, 255);\\\"></ion-back-button>\\n        <ion-title style=\\\"color:white;\\\"><b>Thromde Driver</b></ion-title>\\n      </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-grid>\\n        <ion-list>\\n          <ion-row>\\n            <ion-col size=\\\"3\\\"></ion-col>\\n            <ion-col size=\\\"6\\\">\\n              <ion-item>\\n                <img src=\\\"assets/img/thromde.png\\\" height=\\\"120px\\\" width=\\\"120px\\\">\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\"></ion-col>\\n          </ion-row><br><br>\\n          <ion-row>\\n            <ion-col>\\n              <ion-input color=\\\"secondary\\\" class=\\\"input_border\\\" placeholder=\\\"Vehicle no. eg: BG-1-A2343\\\" [(ngModel)]=\\\"vehNo\\\"></ion-input>\\n            </ion-col>\\n          </ion-row>\\n           <ion-row>\\n            <ion-col>\\n              <ion-input color=\\\"secondary\\\" class=\\\"input_border\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n                <ion-button color=\\\"tertiary\\\" expand=\\\"full\\\" (click)=\\\"login()\\\"> Login </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-grid>\\n</ion-content>\"","module.exports = \".input_border {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-radius: 5px;\\n  border-color: teal; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController, NavController, MenuController } from '@ionic/angular';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\n@Component({\n  selector: 'app-thromdedriver',\n  templateUrl: './thromdedriver.page.html',\n  styleUrls: ['./thromdedriver.page.scss'],\n})\nexport class ThromdedriverPage implements OnInit {\n  vehNo: any;\n  password:any;\n  driver: any[]=[];\n  constructor(\n    private navCtl : NavController,\n    private afs: AngularFirestore,\n    private alertCtrl: AlertController,\n    public natStor: NativeStorage,\n    private menu: MenuController,\n  ) { }\n\n  ngOnInit() {\n  }\n  openMenu(){\n    this.menu.toggle('myMenu');\n  }\n\n  login(){\n    this.afs.collection('t_garbage_trucks').doc(`${this.vehNo}`).get().subscribe(\n      res=>\n      {\n\n          if(res.data().password==this.password)\n          {\n            this.driver.push({\n              vehileno:res.data().vehicleno,\n              password:res.data().password\n            });\n            this.natStor.setItem('drivertok',{vehno:this.vehNo,password:this.password});\n            this.navCtl.navigateForward('/tdriverdashboard/'+this.vehNo);\n          }\n          else\n          {\n            this.alertGeneral(\"Error\",`Password is incorrect.<br>Please try again`);\n          }\n      },\n      error=>\n      {\n          this.alertGeneral(\"Error\",`No driver account associated with given vehicle number <b>OR</b> No internet Connection.`);\n      }\n    )\n    \n  }\n\n  async alertGeneral(header:any,message:any)\n  {\n    const alert= await this.alertCtrl.create(\n      {\n        header:header,\n        message:message,\n        cssClass:'alert',\n        buttons:['Okay']\n      }\n    )\n    alert.present();\n  }\n\n}"],"sourceRoot":""}